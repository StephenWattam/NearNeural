NearNeural is a practical implementation of a back propagating feed-forward multi-layer perceptron neural network.  It is intended to be a library for those who wish to use the analytical power of neural nets for small applications or educational systems and because of this I have attempted to create a framework that models an ideal neural net closely, with separately modifiable and extendable edges, neurons and layers.

Because it was originally intended to be used in an OCR system it has undergone some optimisation: it is now faster than equivalent projects I have found implemented in C# (NeuroOCR), although speed is not the primary goal (Java itself is ill-suited to speed).

I have also developed a subset of NearNeural which models a genetic neural net.  This maintains much of the same structure and borrows design decisions regarding the extensible nature of neurons and training whilst adding the ability to define breeding patterns and conditions of acceptability within a set population.  It is quite conceivable that the two projects will merge.  There are currently few genetic implementations of 'fuzzy' systems in Java, despite its prevalence in the educational spectrum.
